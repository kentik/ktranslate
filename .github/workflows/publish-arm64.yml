name: Publish Production - Arm64

on:
  repository_dispatch:
    types: [new-snmp-profiles]

  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 0         # Fetch all history for .GitInfo and .Lastmod

      - name: Set Version
        run: |
           echo KENTIK_KTRANSLATE_VERSION=`date +"kt-%Y-%m-%d-${GITHUB_RUN_ID}"` >> $GITHUB_ENV

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.17.2'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Install dependencies
        run: sudo apt-get install make libpcap-dev golint gcc-aarch64-linux-gnu

      - name: Install MM DBs
        run: |
          MM_DOWNLOAD_KEY=${{ secrets.MM_DOWNLOAD_KEY }} ./bin/get_mm.sh

      - name: Install SNMP Profiles
        uses: actions/checkout@main
        with:
          repository: kentik/snmp-profiles
          path: ./config/profiles

      - name: Run build
        run: |
          echo ${{ env.KENTIK_KTRANSLATE_VERSION }}
          KENTIK_KTRANSLATE_VERSION=${{ env.KENTIK_KTRANSLATE_VERSION }} make arm

      - name: Run vet & lint
        run: |
          go vet .
          golint .

      - name: Run testing
        run: make test

      - name: Build and Publish Docker
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./DockerfileArm64
          platforms: linux/arm64
          push: true
          tags: kentik/ktranslate:v2arm64

      - name: Publish binary
        uses: actions/upload-artifact@v2
        with:
          name: ktranslate
          path: bin/ktranslate